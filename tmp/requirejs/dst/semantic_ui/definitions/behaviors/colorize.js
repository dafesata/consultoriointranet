/*!
 * # Semantic UI - Colorize
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

(function(e,t,n,r){t=typeof t!="undefined"&&t.Math==Math?t:typeof self!="undefined"&&self.Math==Math?self:Function("return this")(),e.fn.colorize=function(t){var n=e.isPlainObject(t)?e.extend(!0,{},e.fn.colorize.settings,t):e.extend({},e.fn.colorize.settings),i=arguments||!1;return e(this).each(function(t){var s=e(this),o=e("<canvas />")[0],u=e("<canvas />")[0],a=e("<canvas />")[0],f=new Image,l,c,h,p,d,v,m,g=n.colors,y=n.paths,b=n.namespace,w=n.error,E=s.data("module-"+b),S;S={checkPreconditions:function(){return S.debug("Checking pre-conditions"),!e.isPlainObject(g)||e.isEmptyObject(g)?(S.error(w.undefinedColors),!1):!0},async:function(e){n.async?setTimeout(e,0):e()},getMetadata:function(){S.debug("Grabbing metadata"),p=s.data("image")||n.image||r,d=s.data("name")||n.name||t,v=n.width||s.width(),m=n.height||s.height(),(v===0||m===0)&&S.error(w.undefinedSize)},initialize:function(){S.debug("Initializing with colors",g),S.checkPreconditions()&&S.async(function(){S.getMetadata(),S.canvas.create(),S.draw.image(function(){S.draw.colors(),S.canvas.merge()}),s.data("module-"+b,S)})},redraw:function(){S.debug("Redrawing image"),S.async(function(){S.canvas.clear(),S.draw.colors(),S.canvas.merge()})},change:{color:function(e,t){S.debug("Changing color",e);if(g[e]===r)return S.error(w.missingColor),!1;g[e]=t,S.redraw()}},canvas:{create:function(){S.debug("Creating canvases"),o.width=v,o.height=m,u.width=v,u.height=m,a.width=v,a.height=m,l=o.getContext("2d"),c=u.getContext("2d"),h=a.getContext("2d"),s.append(o),l=s.children("canvas")[0].getContext("2d")},clear:function(e){S.debug("Clearing canvas"),h.fillStyle="#FFFFFF",h.fillRect(0,0,v,m)},merge:function(){if(!e.isFunction(l.blendOnto)){S.error(w.missingPlugin);return}l.putImageData(c.getImageData(0,0,v,m),0,0),h.blendOnto(l,"multiply")}},draw:{image:function(e){S.debug("Drawing image"),e=e||function(){},p?(f.src=p,f.onload=function(){c.drawImage(f,0,0),e()}):(S.error(w.noImage),e())},colors:function(){S.debug("Drawing color overlays",g),e.each(g,function(e,t){n.onDraw(h,d,e,t)})}},debug:function(e,t){n.debug&&(t!==r?console.info(n.name+": "+e,t):console.info(n.name+": "+e))},error:function(e){console.warn(n.name+": "+e)},invoke:function(t,i,s){var o;return s=s||Array.prototype.slice.call(arguments,2),typeof t=="string"&&E!==r&&(t=t.split("."),e.each(t,function(t,r){return e.isPlainObject(E[r])?(E=E[r],!0):e.isFunction(E[r])?(o=E[r],!0):(S.error(n.error.method),!1)})),e.isFunction(o)?o.apply(i,s):!1}};if(E!==r&&i)return i[0]=="invoke"&&(i=Array.prototype.slice.call(i,1)),S.invoke(i[0],this,Array.prototype.slice.call(i,1));S.initialize()}),this},e.fn.colorize.settings={name:"Image Colorizer",debug:!0,namespace:"colorize",onDraw:function(e,t,n,r){},async:!0,colors:{},metadata:{image:"image",name:"name"},error:{noImage:"No tracing image specified",undefinedColors:"No default colors specified.",missingColor:"Attempted to change color that does not exist",missingPlugin:"Blend onto plug-in must be included",undefinedHeight:"The width or height of image canvas could not be automatically determined. Please specify a height."}}})(jQuery,window,document);